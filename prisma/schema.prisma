
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_DATABASE_URL")
}

model Product {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  name             String   @db.String
  description      String?   @db.String
  trackUrl         String?  @db.String
  code             String   @unique @db.String
  category         String   @db.String
  createdAt        DateTime @default(now())
  salePrice        Float   
  purchasePrice    Float   
  supplier         String  
  
  company Company @relation(fields: [companyId], references: [id])
  companyId        String   @db.ObjectId

  transactions Transaction[] @relation(fields: [transactionsIds], references: [id])
  transactionsIds        String[]   @db.ObjectId

  virtualStocks VirtualStock[] @relation(fields: [virtualStocksIds], references: [id])
  virtualStocksIds        String[]   @db.ObjectId
  
  photoUrl         String?  @db.String
  technicalDetails Json    @db.Json
  quantityInStock  Int      @db.Int
  updatedAt        DateTime @updatedAt @default(now())

  @@index([companyId])
}


model Company {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String   @db.String
  email    String   @unique @db.String
  password String   @db.String
  photoUrl String?  @db.String
  category String   @db.String

  products Product[]
  

  employees Employee[]
  transactions Transaction[]
  reports Report[]
  virtualStocks VirtualStock[]
}


model Employee {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String   @db.String
  email     String   @unique @db.String
  password  String   @db.String
  role      String   @db.String
  
  company Company @relation(fields: [companyId], references: [id])
  companyId String   @db.ObjectId
  
  photoUrl  String?  @db.String
  createdAt DateTime @default(now())

  @@index([companyId])
}


model Transaction {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  type          String   @db.String
  createdAt     DateTime @default(now())
  
  products      Product[] @relation(fields: [productsIds], references: [id])
  productsIds        String[]   @db.ObjectId
  orders Json

  total         Float  
  paymentMethod String   @db.String

  clientName String
  clientEmail String

  fileUrl       String?  @db.String

  company Company @relation(fields: [companyId], references: [id])
  companyId String   @db.ObjectId

}

model Report {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt  DateTime @default(now()) 
  period     String   @db.String
  fileUrl    String?  @db.String

  company Company @relation(fields: [companyId], references: [id])
  companyId String   @db.ObjectId

  @@index([companyId])
}

model VirtualStock {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @db.String
  createdAt   DateTime @default(now())

  products      Product[] @relation(fields: [productsIds], references: [id])
  productsIds        String[]   @db.ObjectId


  description  String
  categories  String[]
  place       String?  @db.String
  code        String   @db.String

  company Company @relation(fields: [companyId], references: [id])
  companyId String   @db.ObjectId

  @@index([companyId])
}
